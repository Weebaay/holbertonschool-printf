#include <stdio.h>
#include <unistd.h>
#include <stdarg.h>
#include "main.h"
/**
 * _printf - Produces output according to a format
 * @format: The format string containing the characters and the specifiers
 * 
 * Return: The number of characters printed (excluding the null byte used to end output to strings)
 */
int _printf(const char *format, ...)
{
	va_list args;
	char *str;
	int i = 0, count = 0;
	char c;

	if (format == NULL)
		return (-1);

	va_start(args, format);

	while (format && format[1])
	{
		if (format[i] == '%')
		{
			i++;
			if (format[i] == '\n')
				return (-1);
			if (format[i] == 'c')
			{
				c = va_arg(args, int);
				count += write(1, &c, 1);
			}
			else if (format[i] == 's')
			{
				str = va_arg(args, char *);
				if (str == NULL)
					str = "(null)";
				while (*str)
				{
					count += write(1,str, 1);
					str++;
				}
			}
			else if (format[i] == '%')
			{
				count += write(1, "%", 1);
			}
			else
			{
				count += write(1, &format[i - 1], 1);
				count += write(1, &format[i], 1);
			}
		}
		else
		{
			count += write(1, &format[i], 1);
		}
		i++;
	}
	va_end(args);
	return (count);
}
